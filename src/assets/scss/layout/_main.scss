///
/// Dimension by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Main */

	#main {
		@include vendor('flex-grow', '1');
		@include vendor('flex-shrink', '1');
		@include vendor('display', 'flex');
		@include vendor('align-items', 'center');
		@include vendor('justify-content', 'center');
		@include vendor('flex-direction', 'column');
		position: relative;
		max-width: 100%;
		z-index: 3;
		display: none;

		article {
			@include vendor('transform', 'translateY(0.25rem)');
			@include vendor('transition', (
				'opacity #{_duration(article)} ease-in-out',
				'transform #{_duration(article)} ease-in-out'
			));
			@include padding(2.5rem, 2.5rem, (2rem, 0, 1rem, 0));
			position: relative;
			width: 40rem;
			max-width: 100%;
			background-color: transparentize(_palette(bg), 0.15);
			border-radius: _size(border-radius);
			opacity: 0;

			&.timeout {
				display: none;
			}

			&.active.timeout {
				@include vendor('transform', 'translateY(0)');
				opacity: 1;
			}

			&.active {
				display: block !important;
			}

			.close {
				display: block;
				position: absolute;
				top: 0;
				right: 0;
				width: 4rem;
				height: 4rem;
				cursor: pointer;
				text-indent: 4rem;
				overflow: hidden;
				white-space: nowrap;

				&:before {
					@include vendor('transition', 'background-color #{_duration(transition)} ease-in-out');
					content: '';
					display: block;
					position: absolute;
					top: 0.75rem;
					left: 0.75rem;
					width: 2.5rem;
					height: 2.5rem;
					border-radius: 100%;
					background-position: center;
					background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="20px" height="20px" viewBox="0 0 20 20" zoomAndPan="disable"><style>line { stroke: #{_palette(border)}; stroke-width: 1; }</style><line x1="2" y1="2" x2="18" y2="18" /><line x1="18" y1="2" x2="2" y2="18" /></svg>');
					background-size: 20px 20px;
					background-repeat: no-repeat;
				}

				&:hover {
					&:before {
						background-color: _palette(border-bg);
					}
				}

				&:active {
					&:before {
						background-color: _palette(border-bg-alt);
					}
				}
			}

		}

		@include breakpoint(small) {
			article {
				@include padding(2rem, 2rem, (1.5rem, 0, 0.5rem, 0));
				.close {
					&:before {
						top: 0.875rem;
						left: 0.875rem;
						width: 2.25rem;
						height: 2.25rem;
						background-size: 14px 14px;
					}
				}
			}
		}

		@include breakpoint(small) {
			article {
				@include padding(2rem, 1.5rem, (1rem, 0, 0.5rem, 0));
			}
		}
	

		body {
		  background-color: black;
		}
		@mixin slideshow($settings) { 
			$images     : map-get($settings, images); 
			$duration   : map-get($settings, duration);
			$transition : map-get($settings, transition);
			$easing     : map-get($settings, easing);
			$repeat     : map-get($settings, repeat);
			
			// total duration (in seconds) 
			$totalDuration      : $images * $duration;
			$animationSettings  : CSS3slideshow #{$totalDuration} #{$easing} 0s #{$repeat};
			$vendorsList        : (-webkit-, -moz-, -o-, '');
		
			position   : relative;
			cursor     : pointer;
			list-style : none;
		
			li {
				position : absolute;  
				z-index  : $images; 
				top      : 0;
				left     : 0;
				@each $vendor in $vendorsList {
					#{$vendor}animation: #{$animationSettings};
				}  
		
				@for $i from 2 through $images {
		
					&:nth-child(#{$i}) { 
						z-index: #{$images - $i + 1}; 
						@each $vendor in $vendorsList {
							#{$vendor}animation-delay: #{$duration * ($i - 1)};
						}
					}
		
				}
			}
		
			&:hover {
				li {
					@each $vendor in $vendorsList {
						#{$vendor}animation-play-state: paused;
					}  
				}
			}
		
			@at-root {
		
				$endEffect: 100% / $images;
				$timeEffect: round(($transition * 100% / $totalDuration) * 100)/100;
				$startEffect: $endEffect - $timeEffect;
		
				@include setKeyframes(CSS3slideshow) {
				  #{$startEffect}, 100% { opacity: 1; }
				  #{$endEffect}, #{100% - $timeEffect} { opacity: 0; }
				}        
		
			} 
		  
		}
		
		
		@mixin setKeyframes($animationName) {
		
			@-webkit-keyframes #{$animationName} { @content; }
			@-moz-keyframes #{$animationName}    { @content; }
			@-o-keyframes #{$animationName}      { @content; }
			@keyframes #{$animationName}         { @content; }
		
		}
		
		.slideshow {
			@include slideshow((
				images     : 4,                 // Amount of images in the slideshow
				duration   : 4.5s,              // Time of visibility of each image 
				transition : 2s,                // Transition time (with transition < duration)
				easing     : ease,              // Easing type
				repeat     : infinite           // 1,2,3, ... , infinite
			));
		}
	
	}